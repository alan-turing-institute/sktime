name: build-and-test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: set-up-python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: display-python-version
      run: python -c "import sys; print(sys.version)"
    - name: install-dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r build_tools/requirements.txt
        pip install coverage codecov pytest-cov
    - name: build-wheel
      run: |
        # enable OpenMP support for Apple-clang
        export CC=/usr/bin/clang
        export CXX=/usr/bin/clang++
        export CPPFLAGS="$CPPFLAGS -Xpreprocessor -fopenmp"
        export CFLAGS="$CFLAGS -I/usr/local/opt/libomp/include"
        export CXXFLAGS="$CXXFLAGS -I/usr/local/opt/libomp/include"
        export LDFLAGS="$LDFLAGS -L/usr/local/opt/libomp/lib -lomp"
        export DYLD_LIBRARY_PATH=/usr/local/opt/libomp/lib
        export PATH="/usr/local/opt/ccache/libexec:$PATH"
        python setup.py sdist bdist_wheel
    - name: install-from-wheel
      run: pip install --pre --no-index --no-deps --find-links dist/ sktime
    - name: run-tests
      run: |
        mkdir -p testdir/
        cp .coveragerc testdir/
        cp setup.cfg testdir/
        cd testdir/
        pytest --showlocals --durations=10 --pyargs -cov-report=xml --cov=sktime sktime
        cd ..
    - name: publish-code-cov
      run: |
        cp testdir/.coverage .
        bash <(curl -s https://codecov.io/bash) -s testdir || echo "Codecov upload failed"
    - name: deploy-to-pypi
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        ls -l dist/*
        python -m pip install --upgrade twine
        python -m twine upload -r pypi --non-interactive --skip-existing --verbose dist/*.whl
